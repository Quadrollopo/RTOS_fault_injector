set pagination off
set logging file gdb.output
set logging on

b main_blinky

r

vmmap

set $ipx = 0
set $end = 216

set $vars = {&pc54ByteString, &pc55ByteString, &xDelayedTaskList1, &xDelayedTaskList2, &xActiveTimerList1, &xActiveTimerList2, &TraceQueueClassTable, &uiInEventGroupSetBitsFromISR, &CurrentFilterGroup, &CurrentFilterMask, &RecorderData, &RecorderDataPtr, &handle_of_last_logged_task, &init_hwtc_count, &isPendingContextSwitch, &nISRactive, &objectHandleStacks, &recorder_busy, &timestampFrequency, &traceErrorMessage, &trace_disable_timestamp, &uiTraceSystemState, &uiTraceTickCount, &vTraceStopHookPtr, &heapMemUsage, &isrstack, &last_timestamp, &readyEventsEnabled, &xAllowableMargin, &xHalfMaxBlockTime, &xMaxBlockTime, &pcBlockingTaskName, &pcControllingTaskName, &xBlockingCycles, &xControllingCycles, &xErrorOccurred, &sBlockingConsumerCount, &sBlockingProducerCount, &ulISRCycles, &ulTestMasterCycles, &ulTestSlaveCycles, &xEventGroup, &xISREventGroup, &ulGuardedVariable, &ulLoopCounter, &ulLoopCounter, &xBlockWasAborted, &xErrorDetected, &xHighPriorityMutexTask, &xMediumPriorityMutexTask, &xSecondMediumPriorityMutexTask, &xInterruptGivePeriod, &ulCountingSemaphoreLoops, &ulMasterLoops, &xErrorDetected, &xISRCountingSemaphore, &xISRMutex, &xMasterSlaveMutex, &xOkToGiveCountingSemaphore, &xOkToGiveMutex, &xSlaveHandle, &xDemoStatus, &ulCycleCounters, &xControlMessageBuffer, &xCoreBMessageBuffers, &ucBufferStorage, &ulEchoLoopCounters, &ulNonBlockingRxCounter, &ulSenderLoopCounters, &xBlockingStackSize, &xStaticMessageBuffers, &xPollingConsumerCount, &xPollingProducerCount, &xHighPriorityTask, &xHighestPriorityTask, &xMediumPriorityTask, &ulLoopCounter, &xErrorDetected, &ulLoopCounter, &xISRQueue, &xISRTestStatus, &xQueueSetReceivingTask, &xQueueSetSendingTask, &ulCycleCounter, &ulISRTxValue, &ulQueueUsedCounter, &uxNextRand, &xQueueSet, &xQueueSetTasksStatus, &xQueues, &xSetupComplete, &ulCycleCounter, &xQueue, &xQueueSet, &xQueueSetPollStatus, &ulNextRand, &uxCreatorTaskStackBuffer, &uxCycleCounter, &xCreatorTaskTCBBuffer, &xErrorOccurred, &pcDataSentFromInterrupt, &ucBufferStorage, &ulEchoLoopCounters, &ulInterruptTriggerCounter, &ulNonBlockingRxCounter, &ulSenderLoopCounters, &xErrorStatus, &xInterruptStreamBuffer, &xStaticStreamBuffers, &pcStringToReceive, &pcStringToSend, &ulCycleCount, &xDemoStatus, &xStreamBuffer, &ulNotifyCycleCount, &ulTimerNotificationsReceived, &ulTimerNotificationsSent, &uxNextRand, &xErrorStatus, &xTaskToNotify, &xTimer, &ucAutoReloadTimerCounters, &ucISRAutoReloadTimerCounter, &ucISROneShotTimerCounter, &ucOneShotTimerCounter, &ulLoopCounter, &xAutoReloadTimers, &xBasePeriod, &xISRAutoReloadTimer, &xISROneShotTimer, &xOneShotTimer, &xTestStatus, &xErrorOccurred, &xPrimaryCycles, &xRunIndicator, &xSecondary, &xSecondaryCycles, &xTestQueue, &xErrorDetected, &xParameters, &xCreatedTask, &usCreationCount, &uxMaxNumberOfExtraTasksRunning, &uxTasksRunningAtStart, &xSuspendedTestQueue, &ulCounter, &ulExpectedValue, &usCheckVariable, &xContinuousIncrementHandle, &xLimitedIncrementHandle, &xSuspendedQueueReceiveError, &xSuspendedQueueSendError, &usTaskCheck, &xTaskCheck, &uxBlockingCycles, &uxControllingCycles, &uxPollingCycles, &xBlockingIsSuspended, &xBlockingTaskHandle, &xControllingIsSuspended, &xControllingTaskHandle, &xErrorOccurred, &xMutex, &sCheckVariables, &sNextCheckVariable, &xStdioMutex, &xStdioMutexBuffer, &uxTimerTaskStack, &xTraceRunning, &xQueue, &xSemaphore, &xTimer, &fR, &fW, &string1, &string2, &string3, &xQueue, &xTimer, &pcStatusMessage, &xMutexToDelete, &ulStartTimeNs, &hMainThread, &hSigSetupThread, &prvStartTimeNs, &uxCriticalNesting, &xAllSignals, &xResumeSignals, &xSchedulerEnd, &xSchedulerOriginalSignalMask, &xQueueRegistry, &pxCurrentTCB, &uxTopUsedPriority, &pxOverflowDelayedTaskList, &pxReadyTasksLists, &ulTaskSwitchedInTime, &ulTotalRunTime, &uxCurrentNumberOfTasks, &uxDeletedTasksWaitingCleanUp, &uxSchedulerSuspended, &uxTaskNumber, &uxTopReadyPriority, &xIdleTaskHandle, &xNextTaskUnblockTime, &xNumOfOverflows, &xPendedTicks, &xPendingReadyList, &xSchedulerRunning, &xSuspendedTaskList, &xTasksWaitingTermination, &xTickCount, &xYieldPending, &pxCurrentTimerList, &pxOverflowTimerList, &xTimerQueue, &xTimerTaskHandle}

while ($ipx < 216)
	x/gx $vars[$ipx]
	set $ipx=$ipx+1
end


set logging off
quit

